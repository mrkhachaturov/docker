{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:best-practices',
    'docker:enableMajor',
    'group:monorepos',
    'group:recommended',
  ],
  automerge: false,
  automergeType: 'pr',
  prConcurrentLimit: 5,
  prHourlyLimit: 2,
  schedule: [
    'before 6am on monday',
  ],
  timezone: 'Europe/Moscow',
  labels: [
    'dependencies',
    'renovate',
  ],
  assignees: [],
  reviewers: [],
  branchPrefix: 'renovate/',
  semanticCommits: 'enabled',
  packageRules: [
    {
      matchCategories: [
        'docker',
      ],
      pinDigests: true,
      separateMajorMinor: true,
    },
    {
      description: 'Group Docker Compose updates together',
      matchFileNames: [
        '**/docker-compose*.yml',
        '**/docker-compose*.yaml',
      ],
      groupName: 'Docker Compose files',
      groupSlug: 'docker-compose',
    },
    {
      description: 'Ignore specific images that should be updated manually',
      matchPackageNames: [
        'socket-proxy',
      ],
      enabled: false,
    },
    {
      description: 'Pin major versions for critical infrastructure',
      matchPackageNames: [
        'traefik',
      ],
      pin: {
        major: {
          enabled: true,
        },
      },
    },
    {
      description: 'Use latest tag for development tools',
      matchPackageNames: [
        'portainer/portainer-ee',
        'portainer/portainer-ce',
      ],
      followTag: 'latest',
    },
    {
      description: 'Security updates should be merged automatically',
      matchPackageNames: [
        '*',
      ],
      vulnerabilityAlerts: {
        enabled: true,
      },
      automerge: true,
      automergeType: 'pr',
      labels: [
        'security',
        'dependencies',
        'renovate',
      ],
    },
    {
      description: 'Pin major version for Traefik',
      matchPackageNames: [
        'traefik',
      ],
      rangeStrategy: 'pin',
    },
    {
      description: 'Use latest tag for development tools',
      matchPackageNames: [
        'lscr.io/linuxserver/code-server',
        'ghcr.io/haveagitgat/tdarr',
      ],
      followTag: 'latest',
    },
    {
      description: 'Use SemVer versioning for Python images',
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        'python',
      ],
      versioning: 'pep440',
    },
    {
      description: 'Use SemVer versioning for Node.js images',
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        'node',
      ],
      versioning: 'node',
    },
    {
      description: 'Use loose versioning for non-standard tagged images',
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        'quay.io/minio/minio',
      ],
      versioning: 'loose',
    },
    {
      description: 'Auto-merge patch updates for non-critical tools',
      matchPackageNames: [
        'ghcr.io/haveagitgat/tdarr',
        'rclone/rclone',
      ],
      matchUpdateTypes: [
        'patch',
      ],
      automerge: true,
      automergeType: 'pr',
    },
  ],
  dockerfile: {
    pinDigests: true,
  },
  'docker-compose': {
    pinDigests: true,
    managerFilePatterns: [
      '**/docker-compose*.yml',
      '**/docker-compose*.yaml',
      'compose/**/*.yml',
      'compose/**/*.yaml',
    ],
  },
  ignorePaths: [
    '**/secrets/**',
    '**/secrets_example/**',
    '**/*.example',
    '**/appdata/**',
    '**/shared/**',
    '**/scripts/**',
  ],
  ignoreDeps: [
    'socket-proxy',
    'tecnativa/docker-socket-proxy',
    'autobase/console_api',
    'autobase/console_ui',
    'autobase/console_db',
    'databack/mysql-backup',
  ],
  vulnerabilityAlerts: {
    enabled: true,
    labels: [
      'security',
      'vulnerability',
    ],
    assignees: [],
  },
  constraints: {
    docker: '>=20.10.0',
  },
  rangeStrategy: 'bump',
  bumpVersion: 'patch',
  commitBody: 'This PR contains the following updates:\n\n{{#each upgrades}}\n- {{#if displayFrom}}`{{displayFrom}}` -> {{/if}}`{{displayTo}}`{{#if repositoryUrl}} in {{repositoryUrl}}{{/if}}\n{{#if sourceUrl}}  - [{{sourceUrl}}]({{sourceUrl}})\n{{/if}}\n{{/each}}\n\n{{#if hasReleaseNotes}}\n---\n\n### Release Notes\n\n{{#each upgrades}}\n{{#if releases}}\n{{#each releases}}\n{{#if releaseNotes}}\n- {{#if title}}**{{title}}**{{/if}}{{#if tag}} ({{tag}}){{/if}}\n\n{{releaseNotes}}\n\n{{/if}}\n{{/each}}\n{{/if}}\n{{/each}}\n{{/if}}',
  commitMessagePrefix: 'chore(containers):',
  commitMessageSuffix: '{{#if isGroup}}{{groupName}}{{else}}{{#if displayFrom}}{{displayFrom}} -> {{/if}}{{displayTo}}{{/if}}',
  prBody: 'This PR contains the following updates:\n\n{{#if isGroup}}\n{{#each groupSlugs}}\n- {{this}}\n{{/each}}\n{{else}}\n- {{#if displayFrom}}`{{displayFrom}}` -> {{/if}}`{{displayTo}}`{{#if repositoryUrl}} in {{repositoryUrl}}{{/if}}\n{{#if sourceUrl}}  - [{{sourceUrl}}]({{sourceUrl}})\n{{/if}}\n{{/if}}\n\n{{#if hasReleaseNotes}}\n---\n\n### Release Notes\n\n{{#each upgrades}}\n{{#if releases}}\n{{#each releases}}\n{{#if releaseNotes}}\n- {{#if title}}**{{title}}**{{/if}}{{#if tag}} ({{tag}}){{/if}}\n\n{{releaseNotes}}\n\n{{/if}}\n{{/each}}\n{{/if}}\n{{/each}}\n{{/if}}',
}
